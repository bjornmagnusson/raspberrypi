version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.4.1
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker run --rm --privileged multiarch/qemu-user-static:register --reset
            docker-compose -f docker-compose.dev.yml build
            if [[ ! -z "${CIRCLE_TAG}" ]]; then
              TAG=${CIRCLE_TAG} docker-compose build
            fi
      - run:
          name: Test examples
          command: |
            docker run bjornmagnusson/pi-led -demo=true -num=3
      - deploy:
          name: Push Docker image to Docker Hub
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker-compose -f docker-compose.dev.yml push
            fi
            if [[ ! -z "${CIRCLE_TAG}" ]]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              TAG=${CIRCLE_TAG} docker-compose -f docker-compose.dev.yml push
            fi
  deploy:
    docker:
      - image: node:8-alpine
    steps:
      - deploy:
          name: Deploy to resin.io
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              npm install resin-cli -g --production --unsafe-perm
              resin login --token $RESIN_TOKEN
              resin deploy pi1led
            fi
            if [[ ! -z "${CIRCLE_TAG}" ]]; then
              npm install resin-cli -g --production --unsafe-perm
              resin login --token $RESIN_TOKEN
              resin deploy pi1led
            fi
workflows:
  version: 2
  build:
    jobs:
      - build:
          context: DOCKER_HUB
          filters:
            branches:
              ignore: master
  build_deploy:
    jobs:
      - build:
          context: DOCKER_HUB
          filters:
            tags:
              only: /.*/
            branches:
              only: master
      - deploy:
          requires:
            - build
          context: RESIN_IO
          filters:
            tags:
              only: /.*/
            branches:
              only: master
